/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentationLayer;

import ChartDirector.ChartViewer;
import businessLayer.AnalystOperations;
import entityLayer.Employee;
import entityLayer.EmployeeEvaluate;
import entityLayer.EmployeeSurvey;
import java.awt.Color;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author alp_1
 */
public class AnalysisForm extends javax.swing.JFrame {

    AnalystOperations analystOperations = new AnalystOperations();
    /**
     * Creates new form AnalysisForm
     */
    public AnalysisForm() {
        initComponents();
        SurveyToComboBox();
        cmb_Surveys.setSelectedIndex(0);
    }
    
    private void EmployeeToList(int surveyID){
        DefaultListModel<Employee> listModel = new DefaultListModel<Employee>();
        List<Employee> notEvaluatedEmployees = analystOperations.GetEvaluatedEmployees(surveyID);
        for (Employee currentEmployee : notEvaluatedEmployees) {
            listModel.addElement(currentEmployee);
        }
        lst_Employees.setModel(listModel);    
        
    
    }    
    private void SurveyToComboBox(){
        DefaultComboBoxModel<EmployeeSurvey> boxModel = new DefaultComboBoxModel<EmployeeSurvey>();
        List<EmployeeSurvey> surveys = analystOperations.GetAllSurvey();
        for (EmployeeSurvey survey : surveys) {
            boxModel.addElement(survey);
        }
        cmb_Surveys.setModel(boxModel);
    }

    private void CreateChart(List<EmployeeEvaluate> employeeEvaluates, String chartName){
        DemoModule selfRadarChart = new RadarChart(employeeEvaluates, chartName);
		

        //Create and set up the main window
        JFrame selfEvaluateFrame = new JFrame(selfRadarChart.toString());
      
        selfEvaluateFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        selfEvaluateFrame.getContentPane().setBackground(Color.white);

        // Create the chart and put them in the content pane
        ChartViewer selfEvaluateViewer = new ChartViewer();
        selfRadarChart.createChart(selfEvaluateViewer, 0);
        selfEvaluateFrame.getContentPane().add(selfEvaluateViewer);
        
        // Display the window
        selfEvaluateFrame.pack();
        selfEvaluateFrame.setVisible(true);
    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lst_Employees = new javax.swing.JList<>();
        lbl_Employee = new javax.swing.JLabel();
        btn_analysisEmployee = new javax.swing.JButton();
        cmb_Surveys = new javax.swing.JComboBox<>();
        lbl_Survey = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chanket Analysis Software");

        lst_Employees.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(lst_Employees);

        lbl_Employee.setText("Employee List");

        btn_analysisEmployee.setText("Analysis This Employee!");
        btn_analysisEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_analysisEmployeeActionPerformed(evt);
            }
        });

        cmb_Surveys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_SurveysActionPerformed(evt);
            }
        });

        lbl_Survey.setText("Surveys:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_analysisEmployee)
                    .addComponent(lbl_Employee)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_Survey)
                            .addComponent(cmb_Surveys, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lbl_Employee)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_Survey)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_Surveys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(btn_analysisEmployee)))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_analysisEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_analysisEmployeeActionPerformed
        // TODO add your handling code here:
        if(lst_Employees.getSelectedIndex() != -1){
        EmployeeSurvey employeeSurvey = (EmployeeSurvey)cmb_Surveys.getSelectedItem();

        Employee employee = lst_Employees.getSelectedValue();
        
        List<EmployeeEvaluate> selfEvaluates = analystOperations.GetSelfEvaluate(employee.employeeIdentification.employeeID, employeeSurvey.ID);
        CreateChart(selfEvaluates, "Self Evaluated Graph");

        List<EmployeeEvaluate> colleagueEvaluates = analystOperations.GetEvaluates(employee.employeeIdentification.employeeID, employeeSurvey.ID);
        CreateChart(colleagueEvaluates, "Evaluated By Colleague Graph");

        }
        else
            JOptionPane.showMessageDialog(this, "Not found a selected person!");
    }//GEN-LAST:event_btn_analysisEmployeeActionPerformed

    private void cmb_SurveysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_SurveysActionPerformed
        EmployeeSurvey survey =  (EmployeeSurvey)cmb_Surveys.getSelectedItem();
        EmployeeToList(survey.ID);
    }//GEN-LAST:event_cmb_SurveysActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_analysisEmployee;
    private javax.swing.JComboBox<EmployeeSurvey> cmb_Surveys;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_Employee;
    private javax.swing.JLabel lbl_Survey;
    private javax.swing.JList<Employee> lst_Employees;
    // End of variables declaration//GEN-END:variables
}
